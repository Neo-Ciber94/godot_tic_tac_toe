name: CI
on: [push, pull_request, workflow_dispatch]

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: tictactoe
  PROJECT_PATH: .

jobs:
  # Export windows
  export-windows:
    name: Windows Build
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      
      - name: Generate Artifact Name
        run: echo "ARTIFACT_NAME=tictactoe-win-build-$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/windows
          retention-days: 7
          overwrite: true
  
  export-linux:
    name: Linux Server Build
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux Server" "$EXPORT_DIR/linux/$EXPORT_NAME-server"
          
      - name: Generate Artifact Name
        run: echo "ARTIFACT_NAME=tictactoe-server-linux-build-$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/linux
          retention-days: 7
          overwrite: true

  export-android:
      name: Android Build
      runs-on: ubuntu-22.04
      container:
        image: barichello/godot-ci:4.4
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            lfs: true

        - name: Setup Export Templates
          run: |
            mkdir -v -p ~/.local/share/godot/export_templates/
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

        - name: Set up JDK
          uses: actions/setup-java@v4
          with:
            distribution: 'temurin'
            java-version: 17

        - name: Setup Android SDK
          uses: android-actions/setup-android@v3

        - name: Install Android SDK components
          run: sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34" "cmdline-tools;latest" "cmake;3.10.2.4988404" "ndk;23.2.8568313"


        - name: Set Android SDK path in Godot Editor settings
          if: steps.cache-godot.outputs.cache-hit != 'true'
          shell: bash
          env:
            SETTINGS: |
              [gd_resource type="EditorSettings" format=3]

              [resource]
              export/android/android_sdk_path = "/usr/local/lib/android/sdk"
              export/android/shutdown_adb_on_exit = true
              export/android/force_system_user = false
              export/android/debug_keystore = "${{ github.action_path }}/debug.keystore"
              export/android/debug_keystore_user = "androiddebugkey"
              export/android/debug_keystore_pass = "android"
          run: echo $SETTINGS >> ~/.config/godot/editor_settings-4.tres

        - name: Install Android build template
          shell: bash
          run: |
            mkdir -p ${PROJECT_PATH}/android/plugins
            mkdir -p ${PROJECT_PATH}/android/build
            touch ${PROJECT_PATH}/android/build/.gdignore
            echo ${GODOT_VERSION}.stable >> ${PROJECT_PATH}/android/.build_version
            unzip ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable/android_source.zip  -d ${PROJECT_PATH}/android/build
        
        - name: Android Build
          run: |
            mkdir -v -p build/android
            EXPORT_DIR="$(readlink -f build)"
            cd $PROJECT_PATH
            godot --headless --verbose --export-release "Android" "$EXPORT_DIR/android/$EXPORT_NAME.apk"

        - name: Upload APK
          uses: actions/upload-artifact@v4
          with:
            name: tictactoe-android-apk
            path: build/android
            retention-days: 7
            overwrite: true

  # Export web
  export-web:
    name: Web Build
    runs-on: ubuntu-22.04 
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Install crudini
        run: |
          apt-get update
          apt-get install -y crudini

      - name: Set Project Settings
        run: |
          crudini --set $PROJECT_PATH/project.godot environment network/host ${{ secrets.HOST }}
          crudini --set $PROJECT_PATH/project.godot environment network/port ${{ secrets.PORT }}

      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        id: web-artifacts
        with:
          path: build/web
    
  # Deploy Web
  deploy-web:
    name: Web Deploy
    needs: export-web
    permissions:
      pages: write  
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
