name: CI
on: [push, pull_request, workflow_dispatch]

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: tictactoe
  PROJECT_PATH: .

jobs:
  # Export windows
  export-windows:
    name: Windows Build
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      
      - name: Generate Artifact Name
        run: echo "ARTIFACT_NAME=tictactoe-win-build-$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/windows
          retention-days: 7
          overwrite: true
  
  export-linux:
    name: Linux Server Build
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/linux
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Linux Server" "$EXPORT_DIR/linux/$EXPORT_NAME-server"
          
      - name: Generate Artifact Name
        run: echo "ARTIFACT_NAME=tictactoe-server-linux-build-$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/linux
          retention-days: 7
          overwrite: true

  # Export debug android
  export-android-debug:
      name: Android Debug Build
      runs-on: ubuntu-22.04
      container:
        image: barichello/godot-ci:4.4
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            lfs: true

        - name: Setup Export Templates
          run: |
            mkdir -v -p ~/.local/share/godot/export_templates/
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

        - name: Setup JDK
          uses: actions/setup-java@v4
          with:
            distribution: temurin
            java-version: 17

        - name: Setup Android SDK
          uses: android-actions/setup-android@v3

        - name: Cache Android SDK
          id: cache-android-sdk
          uses: actions/cache@v4
          with:
            key: ${{ runner.os }}-android-sdk-${GODOT_VERSION}
            path: |
              ~/.android
              ~/.sdk

        - name: Install Android SDK Dependencies
          if: steps.cache-android-sdk.outputs.cache-hit != 'true'
          run: sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34" "cmdline-tools;latest" "cmake;3.10.2.4988404" "ndk;23.2.8568313"
          
        - name: Generate debug keystore
          run: |
            keytool -keyalg RSA -genkeypair -alias androiddebugkey -keypass android -keystore debug.keystore -storepass android -dname "CN=Android Debug,O=Android,C=US" -validity 9999
            mv debug.keystore /root/debug.keystore

        - name: Set up Godot editor settings
          run: |
            mkdir -p ~/.config/godot/
            echo '[gd_resource type="EditorSettings" format=3]' > ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo '[resource]' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/java_sdk_path = "/usr/lib/jvm/java-17-openjdk-amd64"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/android_sdk_path = "/usr/lib/android-sdk"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/debug_keystore = "/root/debug.keystore"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/debug_keystore_user = "androiddebugkey"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/debug_keystore_pass = "android"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/force_system_user = false' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/timestamping_authority_url = ""' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
            echo 'export/android/shutdown_adb_on_exit = true' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres

        - name: Android Debug Build
          run: |
            mkdir -v -p build/android
            EXPORT_DIR="$(readlink -f build)"
            cd $PROJECT_PATH
            godot --headless --verbose --export-debug "Android" "$EXPORT_DIR/android/$EXPORT_NAME.apk"

        - name: Generate Artifact Name
          run: echo "ARTIFACT_NAME=tictactoe-android-debug-build-$(date +'%Y%m%d')" >> $GITHUB_ENV

        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: ${{ env.ARTIFACT_NAME }}
            path: build/android
            retention-days: 7
            overwrite: true
  
  export-android:
    name: Android Build
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Setup Export Templates
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache Android SDK
        id: cache-android-sdk
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-android-sdk-${GODOT_VERSION}
          path: |
            ~/.android
            ~/.sdk

      - name: Install Android SDK Dependencies
        if: steps.cache-android-sdk.outputs.cache-hit != 'true'
        run: sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34" "cmdline-tools;latest" "cmake;3.10.2.4988404" "ndk;23.2.8568313"

      - name: Prepare keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > /root/release.keystore

      - name: Set up Godot editor settings
        run: |
          mkdir -p ~/.config/godot/
          echo '[gd_resource type="EditorSettings" format=3]' > ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo '[resource]' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/java_sdk_path = "/usr/lib/jvm/java-17-openjdk-amd64"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/android_sdk_path = "/usr/lib/android-sdk"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/force_system_user = false' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/timestamping_authority_url = ""' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/shutdown_adb_on_exit = true' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/keystore = "/root/release.keystore"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/release_keystore_user = "${{ secrets.RELEASE_KEYSTORE_USER }}"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
          echo 'export/android/release_keystore_pass = "${{ secrets.RELEASE_KEYSTORE_PASS }}"' >> ~/.config/godot/editor_settings-${GODOT_VERSION}.tres
      
      - name: Android Build
        # env:
        #   GODOT_ANDROID_KEYSTORE_RELEASE_PATH: /root/release.keystore
        #   GODOT_ANDROID_KEYSTORE_RELEASE_USER: ${{ secrets.RELEASE_KEYSTORE_USER }}
        #   GODOT_ANDROID_KEYSTORE_RELEASE_PASS: ${{ secrets.RELEASE_KEYSTORE_PASS }}
        run: |
          ls -la /root/release.keystore || echo "Keystore file not found"
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_PATH is set to: $GODOT_ANDROID_KEYSTORE_RELEASE_PATH"
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_USER is set: ${{ secrets.RELEASE_KEYSTORE_USER != '' }}"
          echo "GODOT_ANDROID_KEYSTORE_RELEASE_PASS is set: ${{ secrets.RELEASE_KEYSTORE_PASS != '' }}"

          mkdir -v -p build/android
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Android" "$EXPORT_DIR/android/$EXPORT_NAME.apk"

      - name: Generate Artifact Name
        run: echo "ARTIFACT_NAME=tictactoe-android-build-$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/android
          retention-days: 7
          overwrite: true

  # Export web
  export-web:
    name: Web Build
    runs-on: ubuntu-22.04 
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Install crudini
        run: |
          apt-get update
          apt-get install -y crudini

      - name: Set Project Settings
        run: |
          crudini --set $PROJECT_PATH/project.godot environment network/host ${{ secrets.HOST }}
          crudini --set $PROJECT_PATH/project.godot environment network/port ${{ secrets.PORT }}

      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        id: web-artifacts
        with:
          path: build/web
    
  # Deploy Web
  deploy-web:
    name: Web Deploy
    needs: export-web
    permissions:
      pages: write  
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
