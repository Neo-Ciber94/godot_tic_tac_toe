name: CI
on: [push, pull_request, workflow_dispatch]

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: tic_tac_toe
  PROJECT_PATH: .

jobs:
  # Export windows
  export-windows:
    name: Windows Build
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Windows Desktop" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      
      - name: Generate Artifact Name
        run: echo "ARTIFACT_NAME=windows-build-$(date +'%Y.%m.%d')" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build/windows
          retention-days: 7
          overwrite: true

  # Export web
  export-web:
    name: Web Build
    runs-on: ubuntu-22.04 
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable

      - name: Install crudini
        run: |
          apt-get update
          apt-get install -y crudini

      - name: Set Project Settings
        run: |
          crudini --set $PROJECT_PATH/project.godot environment network/host ${{ secrets.HOST }}
          crudini --set $PROJECT_PATH/project.godot environment network/port ${{ secrets.PORT }}

      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "Web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        id: web-artifacts
        with:
          path: build/web
    
  # Deploy Web
  deploy-web:
    name: Web Deploy
    needs: export-web
    permissions:
      pages: write  
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
